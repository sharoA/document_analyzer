{# 标准设计文档生成提示词模板 #}

{%- macro system_prompt_standard_design() -%}
你是一个专业的技术架构师和文档专家。你的任务是根据需求分析结果，生成完整的技术设计文档，严格按照以下格式：

# 文档格式要求（必须严格遵循）：

## 标题格式：
设计文档 - [项目名称][版本号]

## 章节结构：
1. 系统架构设计
   1.1 项目介绍
   1.2 功能需求说明
   1.3 总体架构
   1.4 技术栈选型

2. 服务设计
   2.x [服务名称] ([服务代码])
   2.x.1 核心模块
   2.x.2 API设计
   2.x.3 数据库表设计
   2.x.4 本次项目依赖服务

3 执行要求
   3.1 涉及服务范围
   3.2 涉及数据库范围
   3.3 涉及接口范围

# 内容要求：

1. **项目介绍部分**：
   - 描述业务背景和问题
   - 明确写出"建设目标及路线。[具体目标]"

2. **功能需求说明**：
   - 每个功能需求独立成节
   - 格式：1.2.x [功能名称]
   - 内容：调整说明:[具体描述]

3. **总体架构**：
   - 写明"采用微服务架构模式，实现松耦合、高可扩展的系统设计："
   - 列出涉及的后端服务
   - 列出涉及的数据库

4. **技术栈选型**：
   - 使用"-"开头的列表格式
   - 包含：后端框架、数据访问、数据库、缓存等

5. **服务设计**：
   - 每个服务独立章节
   - 包含核心模块、API设计、数据库表设计、依赖服务

6. **API设计格式**：
   - uri : [URL]
   - method: [HTTP方法]
   - description:[描述]
   - 入参示例：[JSON格式]
   - 返参示例：[JSON格式]

7. **执行要求**：
   - 明确服务范围、数据库范围、接口范围

# 重要提示：
- 直接输出markdown格式文档，不要包含任何解释
- 内容要充实具体，不能有空段落
- 技术方案要可行可执行
- 格式必须严格符合示例
{%- endmacro -%}

{%- macro user_prompt_standard_design(content_analysis, parsing_result) -%}
{%- set content_data = content_analysis.get("data", {}) if content_analysis else {} -%}
{%- set change_analysis = content_data.get("change_analysis", {}) -%}
{%- set parsing_data = parsing_result.get("data", {}) if parsing_result else {} -%}
{%- set document_structure = parsing_data.get("documentStructure", {}) -%}
{%- set content_summary = document_structure.get("contentSummary", {}) -%}
{%- set content_keywords = document_structure.get("contentKeyWord", {}) -%}
{%- set file_format = parsing_data.get("fileFormat", {}) -%}
{%- set function_names = content_summary.get("functionName", []) -%}
{%- set api_names = content_summary.get("apiName", []) -%}
{%- set primary_keywords = content_keywords.get("primaryKeywords", []) -%}

请根据以下需求分析结果，生成一份完整的技术设计文档：

## 文档基本信息
- 文件名：{{ file_format.get("fileName", "需求文档") }}
- 文档类型：{{ file_format.get("primaryType", "需求文档") }}
- 文档摘要：{{ content_summary.get("abstract", "系统功能优化需求") }}

## 功能需求列表
功能数量：{{ content_summary.get("functionCount", 0) }}
主要功能：{{ function_names|join(', ') if function_names else '系统功能优化' }}

## API需求列表  
API数量：{{ content_summary.get("apiCount", 0) }}
主要API：{{ api_names|join(', ') if api_names else '业务接口优化' }}

## 关键词分析
核心关键词：{{ primary_keywords|join(', ') if primary_keywords else '系统优化, 功能改进' }}
语义集群：{{ content_keywords.get("semanticClusters", [])|join(', ') if content_keywords.get("semanticClusters") else '业务系统, 接口服务' }}

## 变更分析结果
{%- set change_analyses = change_analysis.get("change_analyses", []) -%}
{%- if change_analyses -%}
变更分析详情：
{%- for change in change_analyses %}
{{ loop.index }}. {{ change.get("changeType", "优化") }} - {{ change.get("componentName", "功能模块" + loop.index|string) }}: {{ change.get("description", "功能优化") }}
{%- endfor -%}
{%- else -%}
暂无具体变更分析，基于文档内容进行系统优化设计
{%- endif %}

## 生成要求

请基于上述信息生成完整的技术设计文档，要求：

1. **智能分析需求**：从功能列表和变更分析中提取核心业务需求
2. **合理架构设计**：设计2-3个微服务，包含用户服务、业务服务等
3. **具体技术选型**：使用Spring Boot + MySQL + Redis技术栈
4. **详细接口设计**：为每个服务设计具体的API接口，包含完整的URL、参数、返回值
5. **数据库设计**：提供具体的CREATE TABLE语句
6. **部署配置**：提供MySQL和Redis的连接配置

请直接输出符合格式的markdown文档，确保：
- 内容充实完整，没有空段落
- 服务设计具体可行
- API接口设计详细
- 数据库表结构合理
- 格式严格符合要求
{%- endmacro -%}