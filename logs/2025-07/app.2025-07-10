2025-07-09 17:33:29 - system - INFO - ==================================================
2025-07-09 17:33:29 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 17:33:29 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 17:33:29 - system - INFO - 📊 日志级别: INFO
2025-07-09 17:33:29 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 17:33:29 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 17:33:29 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 17:33:29 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 17:33:29 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 17:33:29 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 17:33:29 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 17:33:29 - system - INFO - ==================================================
2025-07-09 17:33:37 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 17:33:37 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 17:33:37 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 17:33:37 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 17:33:37 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 17:33:37 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 17:33:37 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 17:33:37 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 17:33:37 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 17:33:37 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 17:33:38 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 17:33:38 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 17:33:38 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 17:33:38 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 17:33:38 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 17:33:38 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 17:33:38 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 17:33:38 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 17:33:46 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 17:33:47 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 17:33:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 17:33:47 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 17:33:47 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 17:33:47 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 17:33:47 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 17:33:47 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 17:33:47 - api_server - INFO - 增强分析器初始化成功
2025-07-09 17:33:47 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 17:33:47 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 17:33:47 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8082
 * Running on http://26.26.26.1:8082
2025-07-09 17:33:47 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-09 17:33:47 - werkzeug - INFO -  * Restarting with stat
2025-07-09 17:33:48 - system - INFO - ==================================================
2025-07-09 17:33:48 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 17:33:48 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 17:33:48 - system - INFO - 📊 日志级别: INFO
2025-07-09 17:33:48 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 17:33:48 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 17:33:48 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 17:33:48 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 17:33:48 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 17:33:48 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 17:33:48 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 17:33:48 - system - INFO - ==================================================
2025-07-09 17:33:53 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 17:33:54 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 17:33:54 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 17:33:54 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 17:33:54 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 17:33:54 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 17:33:54 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 17:33:54 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 17:33:54 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 17:33:54 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 17:33:55 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 17:33:55 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 17:33:55 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 17:33:55 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 17:33:55 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 17:33:55 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 17:33:55 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 17:33:55 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 17:34:01 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 17:34:04 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 17:34:04 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 17:34:04 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 17:34:04 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 17:34:04 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 17:34:04 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 17:34:04 - api_server - INFO - 增强分析器初始化成功
2025-07-09 17:34:04 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 17:34:04 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 17:34:04 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 17:34:04 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 17:35:56 - src.apis.coder_agent_api - INFO - 开始处理文档: 链数中建一局_1752053756
2025-07-09 17:35:56 - src.apis.coder_agent_api - INFO - 文档长度: 4931 字符
2025-07-09 17:35:56 - src.apis.coder_agent_api - INFO - 使用LangGraph: True
2025-07-09 17:35:56 - src.apis.coder_agent_api - INFO - 代码输出路径: D:\gitlab\create_project
2025-07-09 17:35:56 - src.apis.coder_agent_api - INFO - 使用LangGraph工作流处理项目: 链数中建一局_1752053756
2025-07-09 17:35:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 准备使用异步SQLite检查点: D:\ai_project\document_analyzer\workflow_checkpoints.db
2025-07-09 17:35:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 生成目标分支名称: 链数中建一局_1752053756 -> D_20250709_链数中建一局_1752053756
2025-07-09 17:35:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 开始执行编码工作流: 链数中建一局_1752053756 -> D:\gitlab\create_project
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🚀 Git管理节点开始执行...
2025-07-09 17:35:56 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🎯 git_management_node 开始执行任务...
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ℹ️ 没有可执行的Git管理任务
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ✅ Git管理节点完成 - 提取: 0 个仓库, 克隆: 0 个仓库, 仓库初始化状态: False
2025-07-09 17:35:56 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，Git设置阶段结束
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 智能编码节点开始执行...
2025-07-09 17:35:56 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功加载配置文件
2025-07-09 17:35:56 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 使用火山引擎LLM客户端（从配置文件）
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 intelligent_coding_node 开始执行任务...
2025-07-09 17:35:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第1轮任务检查...
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第1轮找到 1 个可执行任务
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_008 (api)
2025-07-09 17:35:57 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 已被 intelligent_coding_node 领取
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_008
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: CompanyUnitList
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /general/multiorgManage/queryCompanyUnitList
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 3个
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 6个
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据查询条件查询组织单元信息，支持按编码、状态等条件筛选
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service 中查找最佳Java项目路径...
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 用户服务
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📐 合理深度 (深度7) -> +100
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'user-basic-service' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'basic-service' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'user-basic-general' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'basic-general' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'basic' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📦 模块模式匹配: 'general' -> +120
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🏢 业务域匹配: 'user' -> +60
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🏢 业务域匹配: 'basic' -> +60
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🏢 业务域匹配: 'general' -> +60
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🔧 Maven项目 -> +80
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📊 最终优先级: 1109
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🎯 相对路径: user-basic-service\user-basic-general
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📊 Java文件: 29个
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       📐 目录深度: 2
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 1109
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -    1. user-basic-service\user-basic-general (优先级: 1109)
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -    📋 相对路径: user-basic-service\user-basic-general
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 1109
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 17:35:57 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 17:35:57 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 29 个Java文件
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 17:35:57 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine大模型生成代码...
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: CompanyUnitList
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 使用增强的路径判断...
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 深度搜索Java项目路径: 
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务: unknown
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ⚠️ 目录层级过浅 -> -50
2025-07-09 17:35:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现:  (16个Java文件, 深度: 0, 优先级: 0)
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 路径: .
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📊 Java文件: 16个
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🎯 优先级: 0
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 目录深度: 0
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📁 确定的项目根路径: .
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📦 基础包路径: com/yljr/user/basicgeneral
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 Java源码路径: src\main\java\com\yljr\user\basicgeneral
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 配置了 6 个文件路径:
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src\main\java\com\yljr\user\basicgeneral\interfaces\rest
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleService.java -> src\main\java\com\yljr\user\basicgeneral\application\service
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleReq.java -> src\main\java\com\yljr\user\basicgeneral\interfaces\dto
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleResp.java -> src\main\java\com\yljr\user\basicgeneral\interfaces\dto
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleEntity.java -> src\main\java\com\yljr\user\basicgeneral\domain\entity
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleMapper.java -> src\main\java\com\yljr\user\basicgeneral\domain\mapper
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleService.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleReq.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleResp.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleEntity.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleMapper.java
2025-07-09 17:35:59 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 17:36:51 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_3 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_4 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 response_dto 使用新生成的代码
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 7 个代码块，合并后共 7 个
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: CompanyUnitListController
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: CompanyUnitListReq
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: CompanyUnitListResp
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_3 类名: CompanyUnit
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: CompanyUnitListControllerService
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: CompanyUnitListControllerController
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: CompanyUnitListControllerResponse
2025-07-09 17:36:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:37:09 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_1: CompanyUnitListReq.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_2: CompanyUnitListResp.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_3: CompanyUnit.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_4: CompanyUnitMapper.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: CompanyUnitListControllerService.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: CompanyUnitListControllerController.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: CompanyUnitListControllerResponse.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListReq.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListReq.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListResp.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListResp.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitMapper.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitMapper.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListReq.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListResp.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnit.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitMapper.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerService.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerController.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerResponse.java
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ ReAct代码生成完成
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 完成状态: {'status': 'complete', 'core_components': 3, 'total_components': 7, 'missing': [], 'message': '所有3个核心组件已生成'}
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 7 个
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共1轮，生成7个代码组件
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['java_code_1', 'java_code_2', 'java_code_3', 'java_code_4', 'service', 'controller', 'response_dto']
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: CompanyUnitListController
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: CompanyUnitListReq
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: CompanyUnitListResp
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_3 类名: CompanyUnit
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: CompanyUnitListControllerService
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: CompanyUnitListControllerController
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: CompanyUnitListControllerResponse
2025-07-09 17:37:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:37:26 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:37:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:37:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:37:26 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 状态更新为 completed
2025-07-09 17:37:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_008 执行成功
2025-07-09 17:37:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第1轮执行完成，处理了 1 个任务
2025-07-09 17:37:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第2轮任务检查...
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第2轮找到 1 个可执行任务
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_009 (api)
2025-07-09 17:37:27 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 已被 intelligent_coding_node 领取
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_009
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyId
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyId
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 6个
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 4个
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据公司ID和筛选条件查询组织单元额度信息，调用用户服务获取组织单元基础信息
2025-07-09 17:37:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       🏗️ 完整架构层级 (3/4) -> +100
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       🔧 Maven项目 -> +80
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       📊 最终优先级: 2431
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: crcl-open
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       🎯 相对路径: .
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       📊 Java文件: 2251个
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       📐 目录深度: 0
2025-07-09 17:37:27 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 2431
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO -    1. . (优先级: 2431)
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO -    📋 相对路径: .
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 2431
2025-07-09 17:37:28 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:37:28 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:37:52 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 2262 个Java文件
2025-07-09 17:37:52 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2248次)
2025-07-09 17:37:52 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2248次)
2025-07-09 17:37:52 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2248次)
2025-07-09 17:37:52 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine大模型生成代码...
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: UnitLimitByCompanyId
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 使用增强的路径判断...
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 深度搜索Java项目路径: 
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务: unknown
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ⚠️ 目录层级过浅 -> -50
2025-07-09 17:37:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现:  (23个Java文件, 深度: 0, 优先级: 3)
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 路径: .
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📊 Java文件: 23个
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🎯 优先级: 3
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 目录深度: 0
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📁 确定的项目根路径: .
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📦 基础包路径: com/yljr/crcl
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 Java源码路径: src\main\java\com\yljr\crcl
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 配置了 6 个文件路径:
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src\main\java\com\yljr\crcl\interfaces\rest
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleService.java -> src\main\java\com\yljr\crcl\application\service
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleReq.java -> src\main\java\com\yljr\crcl\interfaces\dto
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleResp.java -> src\main\java\com\yljr\crcl\interfaces\dto
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleEntity.java -> src\main\java\com\yljr\crcl\domain\entity
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleMapper.java -> src\main\java\com\yljr\crcl\domain\mapper
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleService.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleReq.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleResp.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleEntity.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleMapper.java
2025-07-09 17:37:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 17:38:46 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_4 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_5 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_6 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 7 个代码块，合并后共 7 个
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:38:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:39:04 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 3 个Java文件路径
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdService.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdMapper.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 3 个文件到项目中
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdController.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdService.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdMapper.java
2025-07-09 17:39:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第2/6轮...
2025-07-09 17:39:40 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 8 个
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: UnitLimitByCompanyIdResp
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitByCompanyIdReq
2025-07-09 17:39:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:39:56 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:39:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:39:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:39:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第3/6轮...
2025-07-09 17:40:32 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_3 使用新生成的代码
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 3 个代码块，合并后共 9 个
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: UnitLimitByCompanyIdResp
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: PageResult
2025-07-09 17:40:32 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:40:50 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:40:50 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:40:50 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:40:50 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第4/6轮...
2025-07-09 17:41:22 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 request_dto 使用新生成的代码
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 1 个代码块，合并后共 10 个
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: UnitLimitByCompanyIdResp
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: PageResult
2025-07-09 17:41:22 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:41:39 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 4 个Java文件路径
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitConverter.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 4 个文件到项目中
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdController.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitConverter.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdReq.java
2025-07-09 17:41:39 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第5/6轮...
2025-07-09 17:42:24 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 10 个
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: DtoValidator
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitByCompanyIdResp
2025-07-09 17:42:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:42:44 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 4 个Java文件路径
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitConverter.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: Unknown.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\Unknown.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\Unknown.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 4 个文件到项目中
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdController.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitConverter.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: Unknown.java
2025-07-09 17:42:44 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第6/6轮...
2025-07-09 17:43:49 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 response_dto 使用新生成的代码
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 11 个
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitByCompanyIdResp
2025-07-09 17:43:49 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:44:04 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 5 个Java文件路径
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdResp.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitConverter.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 5 个文件到项目中
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdController.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitConverter.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdReq.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdResp.java
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ ReAct代码生成完成
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 完成状态: {'status': 'complete', 'core_components': 3, 'total_components': 11, 'missing': [], 'message': '所有3个核心组件已生成'}
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 11 个
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共6轮，生成11个代码组件
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['controller', 'java_code_2', 'service', 'java_code_4', 'java_code_5', 'java_code_6', 'mapper', 'java_code_1', 'java_code_3', 'request_dto', 'response_dto']
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_4 类名: UnitLimitByCompanyIdReq
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimitByCompanyIdResp
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_6 类名: UnitLimitEntity
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitByCompanyIdResp
2025-07-09 17:44:04 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:44:23 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 5 个Java文件路径
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdResp.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitConverter.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 5 个文件到项目中
2025-07-09 17:44:23 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 状态更新为 completed
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_009 执行成功
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第2轮执行完成，处理了 1 个任务
2025-07-09 17:44:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第3轮任务检查...
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第3轮找到 1 个可执行任务
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_010 (api)
2025-07-09 17:44:24 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 已被 intelligent_coding_node 领取
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_010
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyIdExport
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 4个
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 3个
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 复用listUnitLimitByCompanyId接口的查询逻辑，将结果导出为Excel格式
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:44:24 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 17:44:24 - src.apis.project_analysis_api - INFO - 📋 使用缓存的分析结果
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine大模型生成代码...
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: UnitLimitByCompanyIdExport
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 使用增强的路径判断...
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 深度搜索Java项目路径: 
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务: unknown
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ⚠️ 目录层级过浅 -> -50
2025-07-09 17:44:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现:  (30个Java文件, 深度: 0, 优先级: 10)
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 路径: .
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📊 Java文件: 30个
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🎯 优先级: 10
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 目录深度: 0
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📁 确定的项目根路径: .
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📦 基础包路径: com/yljr/crcl
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 Java源码路径: src\main\java\com\yljr\crcl
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 配置了 6 个文件路径:
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src\main\java\com\yljr\crcl\interfaces\rest
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleService.java -> src\main\java\com\yljr\crcl\application\service
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleReq.java -> src\main\java\com\yljr\crcl\interfaces\dto
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleResp.java -> src\main\java\com\yljr\crcl\interfaces\dto
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleEntity.java -> src\main\java\com\yljr\crcl\domain\entity
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleMapper.java -> src\main\java\com\yljr\crcl\domain\mapper
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleService.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleReq.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleResp.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleEntity.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleMapper.java
2025-07-09 17:44:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 17:45:36 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_3 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_5 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_6 使用新生成的代码
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 6 个代码块，合并后共 6 个
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: ExportUnitLimitByCompanyId
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitByCompanyIdExportReq
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: ExportUnitLimitByCompanyIdController
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: ExportUnitLimitByCompanyIdServiceImpl
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:45:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:45:52 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:45:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:45:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:45:52 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第2/6轮...
2025-07-09 17:46:15 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 💭 思考: 1. 虽然请求DTO已经生成，但响应DTO还未完成
2. 由于这是一个文件导出接口，响应DTO需要包含文件流相关信息
3. 需要遵循项目统一的响应格式规范...
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 行动: 生成响应DTO组件...
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 👀 观察: 1. 当前接口是文件导出，直接返回文件流，不需要额外的响应DTO
2. 但为了完整性，可以生成一个通用的文件导出响应DTO，供其他类似接口使用

以下是生成的响应DTO代码：...
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 1 个代码块，合并后共 6 个
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: ExportUnitLimitByCompanyId
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: FileExportResp
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: ExportUnitLimitByCompanyIdController
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: ExportUnitLimitByCompanyIdServiceImpl
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:46:15 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:46:30 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:46:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:46:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:46:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第3/6轮...
2025-07-09 17:47:16 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 💭 思考: 1. 重新审视需求规格，确认导出接口的特殊性
2. 文件导出接口通常直接返回文件流，不需要额外的响应DTO包装
3. 但为了系统统一性和未来扩展，可以保留通用响应结构
4. 请求DTO已生成但可以优化校验规则和文档注释...
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 行动: 优化请求DTO并生成更合适的响应DTO结构

1. 首先优化请求DTO（增加更详细的校验和文档）：...
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 👀 观察: 1. 请求DTO优化内容：
   - 增加了更精细的长度校验(@Size)
   - 补充了Swagger示例值(example)
   - 更新了类名和文档描述更准确
   - 保持了原有的必填校验(@NotBlank)

2. 响应DTO改进点：
   - 设计了更符合业务场景的响应结构
   ...
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 7 个
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: ExportUnitLimitByCompanyId
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimitExportReq
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: ExportUnitLimitByCompanyIdController
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: ExportUnitLimitByCompanyIdServiceImpl
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: ExportResultResp
2025-07-09 17:47:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:47:37 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:47:37 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:47:37 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:47:37 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第4/6轮...
2025-07-09 17:48:23 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 💭 思考: 1. 检查所有标记为⏳的组件状态
2. 确认请求DTO和响应DTO都已生成最新版本
3. 实体类和Mapper接口需要最终确认
4. 需要确保所有组件之间的关联正确性...
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 行动: 最终确认和补充实体类与Mapper

1. 补充实体类字段和文档：...
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 👀 观察: 1. 实体类完善内容：
   - 增加了更多业务字段(id, effectiveDate等)
   - 使用BigDecimal处理金额/限额字段
   - 添加了完整的Swagger文档
   - 保持与数据库字段的对应关系

2. Mapper接口改进：
   - 添加了@Mapper注解
  ...
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_1 使用新生成的代码
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 8 个
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: ExportUnitLimitByCompanyId
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimit
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: ExportUnitLimitByCompanyIdController
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: ExportUnitLimitByCompanyIdServiceImpl
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: ExportResultResp
2025-07-09 17:48:23 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:48:40 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:48:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:48:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:48:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第5/6轮...
2025-07-09 17:49:10 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 💭 思考: 1. 重新审视所有组件状态，确认标记为⏳的组件
2. 请求DTO和响应DTO已生成优化版本
3. 实体类已补充完整字段和文档
4. 需要确认是否还需要其他辅助组件...
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 行动: 生成辅助配置类和异常处理

1. 补充全局异常处理类（增强系统健壮性）：...
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 👀 观察: 1. 新增组件说明：
   - GlobalExceptionHandler：统一异常处理，返回标准错误格式
   - ExportConfig：可配置的导出参数，增强灵活性

2. 最终组件全景：
   ✅ 控制器层
   ✅ 服务层实现
   ✅ 请求DTO（UnitLimitExportReq...
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_2 使用新生成的代码
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 2 个代码块，合并后共 8 个
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleException
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimit
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: GlobalExceptionHandler
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: HandleExceptionServiceImpl
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: ExportConfig
2025-07-09 17:49:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:49:30 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 8 个Java文件路径
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_1: UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: GlobalExceptionHandler.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_3: UnitLimitByCompanyIdExportService.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: HandleExceptionServiceImpl.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_6: UnitLimitMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_2: ExportConfig.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: HandleExceptionMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\GlobalExceptionHandler.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\GlobalExceptionHandler.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportService.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportService.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\HandleExceptionServiceImpl.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\HandleExceptionServiceImpl.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\ExportConfig.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\ExportConfig.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\HandleExceptionMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\HandleExceptionMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 8 个文件到项目中
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: GlobalExceptionHandler.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportService.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: HandleExceptionServiceImpl.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimit.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: ExportConfig.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: HandleExceptionMapper.java
2025-07-09 17:49:30 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第6/6轮...
2025-07-09 17:49:56 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleException
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimit
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: GlobalExceptionHandler
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: HandleExceptionServiceImpl
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: ExportConfig
2025-07-09 17:49:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:50:14 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 8 个
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共6轮，生成8个代码组件
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['java_code_1', 'controller', 'java_code_3', 'service', 'java_code_5', 'java_code_6', 'java_code_2', 'mapper']
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleException
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_1 类名: UnitLimit
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: GlobalExceptionHandler
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: HandleExceptionServiceImpl
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_2 类名: ExportConfig
2025-07-09 17:50:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 17:50:31 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 0 个Java文件路径
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 0 个文件到项目中
2025-07-09 17:50:31 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 状态更新为 completed
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_010 执行成功
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第3轮执行完成，处理了 1 个任务
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第4轮任务检查...
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 第4轮没有可执行的智能编码任务
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码任务执行完成，共处理 3 个任务，共4轮
2025-07-09 17:50:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码节点完成，处理了 3 个任务
2025-07-09 17:50:31 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，结束编码流程
2025-07-09 17:50:31 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 工作流执行成功: 链数中建一局_1752053756, 完成服务数: 0
2025-07-09 17:50:31 - api_server - INFO - ✅ POST coder_agent_api.process_design_document [200] (875.06s)
2025-07-09 17:50:31 - werkzeug - INFO - 127.0.0.1 - - [09/Jul/2025 17:50:31] "POST /api/coder-agent/process-document HTTP/1.1" 200 -
2025-07-09 17:57:39 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\coder_agent_templates\\task_templates.py', reloading
2025-07-09 20:46:07 - system - INFO - ==================================================
2025-07-09 20:46:07 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 20:46:07 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 20:46:07 - system - INFO - 📊 日志级别: INFO
2025-07-09 20:46:07 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 20:46:07 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 20:46:07 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 20:46:07 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 20:46:07 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 20:46:07 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 20:46:07 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 20:46:07 - system - INFO - ==================================================
2025-07-09 20:46:16 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 20:46:16 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 20:46:16 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 20:46:16 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 20:46:16 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 20:46:16 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 20:46:16 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 20:46:16 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 20:46:16 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 20:46:16 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 20:46:17 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 20:46:18 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 20:46:18 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 20:46:18 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 20:46:18 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 20:46:18 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 20:46:18 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 20:46:18 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 20:46:25 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 20:46:27 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 20:46:28 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 20:46:28 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 20:46:28 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 20:46:28 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 20:46:28 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 20:46:28 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 20:46:28 - api_server - INFO - 增强分析器初始化成功
2025-07-09 20:46:28 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 20:46:28 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 20:46:28 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8082
 * Running on http://26.26.26.1:8082
2025-07-09 20:46:28 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-09 20:46:28 - werkzeug - INFO -  * Restarting with stat
2025-07-09 20:46:28 - system - INFO - ==================================================
2025-07-09 20:46:28 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 20:46:28 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 20:46:28 - system - INFO - 📊 日志级别: INFO
2025-07-09 20:46:28 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 20:46:28 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 20:46:28 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 20:46:28 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 20:46:28 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 20:46:28 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 20:46:28 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 20:46:28 - system - INFO - ==================================================
2025-07-09 20:46:34 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 20:46:34 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 20:46:34 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 20:46:34 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 20:46:34 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 20:46:34 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 20:46:35 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 20:46:35 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 20:46:35 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 20:46:35 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 20:46:36 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 20:46:36 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 20:46:36 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 20:46:36 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 20:46:36 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 20:46:36 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 20:46:36 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 20:46:36 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 20:46:45 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 20:46:46 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 20:46:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 20:46:47 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 20:46:47 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 20:46:47 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 20:46:47 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 20:46:47 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 20:46:47 - api_server - INFO - 增强分析器初始化成功
2025-07-09 20:46:47 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 20:46:47 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 20:46:47 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 20:46:47 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 20:47:40 - src.apis.coder_agent_api - INFO - 开始处理文档: 链数中建一局_1752065260
2025-07-09 20:47:40 - src.apis.coder_agent_api - INFO - 文档长度: 4931 字符
2025-07-09 20:47:40 - src.apis.coder_agent_api - INFO - 使用LangGraph: True
2025-07-09 20:47:40 - src.apis.coder_agent_api - INFO - 代码输出路径: D:\gitlab\create_project
2025-07-09 20:47:40 - src.apis.coder_agent_api - INFO - 使用LangGraph工作流处理项目: 链数中建一局_1752065260
2025-07-09 20:47:40 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 准备使用异步SQLite检查点: D:\ai_project\document_analyzer\workflow_checkpoints.db
2025-07-09 20:47:40 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 生成目标分支名称: 链数中建一局_1752065260 -> D_20250709_链数中建一局_1752065260
2025-07-09 20:47:40 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 开始执行编码工作流: 链数中建一局_1752065260 -> D:\gitlab\create_project
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🚀 Git管理节点开始执行...
2025-07-09 20:47:40 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🎯 git_management_node 开始执行任务...
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ℹ️ 没有可执行的Git管理任务
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ✅ Git管理节点完成 - 提取: 0 个仓库, 克隆: 0 个仓库, 仓库初始化状态: False
2025-07-09 20:47:40 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，Git设置阶段结束
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 智能编码节点开始执行...
2025-07-09 20:47:40 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功加载配置文件
2025-07-09 20:47:40 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 使用火山引擎LLM客户端（从配置文件）
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 intelligent_coding_node 开始执行任务...
2025-07-09 20:47:40 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第1轮任务检查...
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第1轮找到 1 个可执行任务
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_008 (api)
2025-07-09 20:47:41 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 已被 intelligent_coding_node 领取
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_008
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: CompanyUnitList
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /general/multiorgManage/queryCompanyUnitList
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 3个
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 6个
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据查询条件查询组织单元信息，支持按编码、状态等条件筛选
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service 中查找最佳Java项目路径...
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 用户服务
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    📐 中等深度结构 (深度7) -> +100
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    📦 服务模块匹配: user-basic-service -> +120
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    🏢 业务域匹配: user -> +60
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    🏗️ 架构层级匹配: service -> +100
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    🎯🎯🎯 深层服务模块路径匹配 -> +800
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -       🎯 相对路径: user-basic-service\user-basic-general
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -       📊 Java文件: 29个
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -       📐 目录深度: 2
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 1181
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    1. user-basic-service\user-basic-general (优先级: 1181)
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    📋 相对路径: user-basic-service\user-basic-general
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 1181
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 20:47:41 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 20:47:41 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 29 个Java文件
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 20:47:41 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: CompanyUnitList
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 使用默认Java路径判断逻辑...
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleController.java -> src/main/java/com/yljr/user/basicgeneral/interfaces/rest
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:47:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 20:48:46 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 从ReAct响应提取到的代码类型: ['request_dto', 'response_dto', 'java_code_3', 'mapper', 'service', 'controller']
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ⚠️ 检测到Service类，但不是接口实现模式
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 将Service类转换为接口+实现模式
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功转换Service类为接口: CompanyUnitService
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功转换Service类为实现类: CompanyUnitServiceImpl
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功转换为接口+实现模式
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 request_dto 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 response_dto 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_3 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service_impl 使用新生成的代码
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 7 个代码块，合并后共 7 个
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: CompanyUnitListController
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: CompanyUnitListControllerReq
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: CompanyUnitListControllerResponse
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_3 类名: CompanyUnit
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: CompanyUnitListControllerController
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: CompanyUnitListControllerServiceImpl
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_3
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['request_dto', 'response_dto', 'java_code_3', 'mapper', 'service', 'controller', 'service_impl']
2025-07-09 20:48:46 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:49:06 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: CompanyUnitListControllerReq.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: CompanyUnitListControllerResponse.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_3: CompanyUnit.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: CompanyUnitListControllerMapper.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: CompanyUnitListControllerService.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: CompanyUnitListControllerController.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerReq.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerReq.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListControllerMapper.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListControllerMapper.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerReq.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerResponse.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnit.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerMapper.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerService.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerController.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ ReAct代码生成完成
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 完成状态: {'status': 'complete', 'core_components': 3, 'total_components': 7, 'missing': [], 'message': '所有3个核心组件已生成'}
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 7 个
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共1轮，生成7个代码组件
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['request_dto', 'response_dto', 'java_code_3', 'mapper', 'service', 'controller', 'service_impl']
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: CompanyUnitListController
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: CompanyUnitListControllerReq
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: CompanyUnitListControllerResponse
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_3 类名: CompanyUnit
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: CompanyUnitListControllerController
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: CompanyUnitListControllerServiceImpl
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_3
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['request_dto', 'response_dto', 'java_code_3', 'mapper', 'service', 'controller', 'service_impl']
2025-07-09 20:49:06 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:49:25 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: CompanyUnitListControllerReq.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: CompanyUnitListControllerResponse.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_3: CompanyUnit.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: CompanyUnitListControllerMapper.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: CompanyUnitListControllerService.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: CompanyUnitListControllerController.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerReq.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerReq.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListControllerResponse.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnit.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListControllerMapper.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListControllerMapper.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListControllerService.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListControllerController.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListControllerServiceImpl.java
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 20:49:25 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 状态更新为 completed
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_008 执行成功
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第1轮执行完成，处理了 1 个任务
2025-07-09 20:49:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第2轮任务检查...
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第2轮找到 1 个可执行任务
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_009 (api)
2025-07-09 20:49:26 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 已被 intelligent_coding_node 领取
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_009
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyId
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyId
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 6个
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 4个
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据公司ID和筛选条件查询组织单元额度信息，调用用户服务获取组织单元基础信息
2025-07-09 20:49:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: crcl-open
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -       🎯 相对路径: .
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -       📊 Java文件: 2256个
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -       📐 目录深度: 0
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 50
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -    1. . (优先级: 50)
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -    📋 相对路径: .
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 50
2025-07-09 20:49:26 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:49:26 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:49:26 - src.utils.java_code_analyzer - WARNING - ⚠️ 解析Java文件失败 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdServiceImpl.java: 
2025-07-09 20:49:26 - src.utils.java_code_analyzer - WARNING - ⚠️ 解析Java文件失败 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitConverter.java: 
2025-07-09 20:49:26 - src.utils.java_code_analyzer - WARNING - ⚠️ 解析Java文件失败 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java: 
2025-07-09 20:49:26 - src.utils.java_code_analyzer - WARNING - ⚠️ 解析Java文件失败 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java: 
2025-07-09 20:49:26 - src.utils.java_code_analyzer - WARNING - ⚠️ 解析Java文件失败 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java: 
2025-07-09 20:49:36 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 2267 个Java文件
2025-07-09 20:49:36 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2253次)
2025-07-09 20:49:36 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2253次)
2025-07-09 20:49:36 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl (出现2253次)
2025-07-09 20:49:36 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: UnitLimitByCompanyId
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 使用默认Java路径判断逻辑...
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:49:36 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 20:50:41 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 从ReAct响应提取到的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'java_code_5', 'mapper']
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 检测到Service接口
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 request_dto 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 response_dto 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_5 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 6 个代码块，合并后共 6 个
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdService
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdReq
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdResp
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_5
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'java_code_5', 'mapper']
2025-07-09 20:50:41 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:50:56 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 6 个Java文件路径
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdService.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdResp.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdMapper.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 6 个文件到项目中
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdController.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdService.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdReq.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdResp.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimit.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdMapper.java
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ ReAct代码生成完成
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 完成状态: {'status': 'complete', 'core_components': 3, 'total_components': 6, 'missing': [], 'message': '所有3个核心组件已生成'}
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 6 个
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共1轮，生成6个代码组件
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['controller', 'service', 'request_dto', 'response_dto', 'java_code_5', 'mapper']
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service 类名: UnitLimitByCompanyIdService
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdReq
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdResp
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_5
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'java_code_5', 'mapper']
2025-07-09 20:50:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:51:16 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 6 个Java文件路径
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdService.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdResp.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdMapper.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdService.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 6 个文件到项目中
2025-07-09 20:51:16 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 状态更新为 completed
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_009 执行成功
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第2轮执行完成，处理了 1 个任务
2025-07-09 20:51:16 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第3轮任务检查...
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第3轮找到 1 个可执行任务
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_010 (api)
2025-07-09 20:51:17 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 已被 intelligent_coding_node 领取
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_010
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyIdExport
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 4个
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 3个
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 复用listUnitLimitByCompanyId接口的查询逻辑，将结果导出为Excel格式
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:51:17 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:/gitlab/create_project/链数中建一局_1752029983/crcl-open
2025-07-09 20:51:17 - src.apis.project_analysis_api - INFO - 📋 使用缓存的分析结果
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 构建代码生成prompt...
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启用ReAct模式进行代码生成
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🧠 启动ReAct模式代码生成...
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 检查目标文件是否存在: UnitLimitByCompanyIdExport
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 使用默认Java路径判断逻辑...
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['controller', 'service', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: ExampleController.java -> src/main/java/com/yljr/crcl/interfaces/rest
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 controller 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 service 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 request_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 response_dto 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 entity 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📄 mapper 文件不存在，将生成新文件: ExampleController.java
2025-07-09 20:51:17 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第1/6轮...
2025-07-09 20:52:26 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 从ReAct响应提取到的代码类型: ['request_dto', 'controller', 'service', 'service_impl', 'java_code_5', 'mapper']
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 检测到Service接口
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 检测到ServiceImpl实现类
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 request_dto 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 controller 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 service_impl 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 java_code_5 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 mapper 使用新生成的代码
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 6 个代码块，合并后共 6 个
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyIdExportController
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdExportControllerReq
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdExportControllerController
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: UnitLimitByCompanyIdExportControllerServiceImpl
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_5
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['request_dto', 'controller', 'service', 'service_impl', 'java_code_5', 'mapper']
2025-07-09 20:52:26 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:52:43 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 6 个Java文件路径
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 6 个文件到项目中
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimit.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:52:43 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 ReAct循环第2/6轮...
2025-07-09 20:53:14 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 💭 思考: 1. 虽然这是一个文件导出接口，但通常我们仍然需要一个响应DTO来表示操作结果
2. 响应DTO应该包含操作状态和可能的错误信息
3. 即使返回的是文件流，统一响应格式仍然很重要...
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 行动: 生成响应DTO...
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 👀 观察: 当前已生成5个组件，响应DTO是最后一个需要生成的组件

现在生成响应DTO代码：...
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 从ReAct响应提取到的代码类型: ['response_dto']
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 response_dto 使用新生成的代码
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 本轮生成了 1 个代码块，合并后共 7 个
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyIdExportController
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdExportControllerReq
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdExportControllerController
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: UnitLimitByCompanyIdExportControllerServiceImpl
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdExportControllerResp
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_5
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['request_dto', 'controller', 'service', 'service_impl', 'java_code_5', 'mapper', 'response_dto']
2025-07-09 20:53:14 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:53:34 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimit.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件验证成功: UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ ReAct代码生成完成
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 完成状态: {'status': 'complete', 'core_components': 3, 'total_components': 7, 'missing': [], 'message': '所有3个核心组件已生成'}
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 验证完成，有效代码块: 7 个
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎊 ReAct完成摘要: 共2轮，生成7个代码组件
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 最终生成: ['request_dto', 'controller', 'service', 'service_impl', 'java_code_5', 'mapper', 'response_dto']
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyIdExportController
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdExportControllerReq
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdExportControllerController
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: UnitLimitByCompanyIdExportControllerServiceImpl
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ java_code_5 类名: UnitLimit
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdExportControllerResp
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - WARNING - ⚠️ 无法识别代码块类型: java_code_5
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['request_dto', 'controller', 'service', 'service_impl', 'java_code_5', 'mapper', 'response_dto']
2025-07-09 20:53:34 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 20:53:54 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service: UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 java_code_5: UnitLimit.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerReq.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\rest\UnitLimitByCompanyIdExportControllerController.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\UnitLimitByCompanyIdExportControllerService.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\application\service\impl\UnitLimitByCompanyIdExportControllerServiceImpl.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\entity\UnitLimit.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\domain\mapper\UnitLimitByCompanyIdExportControllerMapper.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\interfaces\dto\UnitLimitByCompanyIdExportControllerResp.java
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 20:53:54 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 状态更新为 completed
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_010 执行成功
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第3轮执行完成，处理了 1 个任务
2025-07-09 20:53:54 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第4轮任务检查...
2025-07-09 20:53:55 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 第4轮没有可执行的智能编码任务
2025-07-09 20:53:55 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码任务执行完成，共处理 3 个任务，共4轮
2025-07-09 20:53:55 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码节点完成，处理了 3 个任务
2025-07-09 20:53:55 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，结束编码流程
2025-07-09 20:53:55 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 工作流执行成功: 链数中建一局_1752065260, 完成服务数: 0
2025-07-09 20:53:55 - api_server - INFO - ✅ POST coder_agent_api.process_design_document [200] (374.64s)
2025-07-09 20:53:55 - werkzeug - INFO - 127.0.0.1 - - [09/Jul/2025 20:53:55] "POST /api/coder-agent/process-document HTTP/1.1" 200 -
2025-07-09 21:10:37 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:10:39 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:10:39 - system - INFO - ==================================================
2025-07-09 21:10:39 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:10:39 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:10:39 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:10:39 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:10:39 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:10:39 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:10:39 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:10:39 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:10:39 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:10:39 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:10:39 - system - INFO - ==================================================
2025-07-09 21:10:47 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:10:48 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:10:48 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:10:48 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:10:48 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:10:48 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:10:48 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:10:48 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:10:48 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:10:48 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:10:49 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:10:49 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:10:49 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:10:49 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:10:49 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:10:49 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:10:49 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:10:49 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:10:57 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:10:57 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:10:58 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:10:58 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:10:58 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:10:58 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:10:58 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:10:58 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:10:58 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:10:58 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:10:58 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:10:58 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:10:58 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:14:50 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:14:51 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:14:52 - system - INFO - ==================================================
2025-07-09 21:14:52 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:14:52 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:14:52 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:14:52 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:14:52 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:14:52 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:14:52 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:14:52 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:14:52 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:14:52 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:14:52 - system - INFO - ==================================================
2025-07-09 21:14:58 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:14:58 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:14:58 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:14:58 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:14:58 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:14:58 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:14:58 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:14:58 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:14:58 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:14:58 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:14:59 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:14:59 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:14:59 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:14:59 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:14:59 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:14:59 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:14:59 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:14:59 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:15:04 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:15:04 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:15:04 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:15:04 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:15:04 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:15:04 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:15:04 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:15:04 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:15:04 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:15:04 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:15:04 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:15:04 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:15:04 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:15:14 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:15:15 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:15:16 - system - INFO - ==================================================
2025-07-09 21:15:16 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:15:16 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:15:16 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:15:16 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:15:16 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:15:16 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:15:16 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:15:16 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:15:16 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:15:16 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:15:16 - system - INFO - ==================================================
2025-07-09 21:15:22 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:15:23 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:15:23 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:15:23 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:15:23 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:15:23 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:15:23 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:15:23 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:15:23 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:15:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:15:24 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:15:24 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:15:24 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:15:24 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:15:24 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:15:24 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:15:24 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:15:24 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:15:29 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:15:29 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:15:29 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:15:29 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:15:29 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:15:29 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:15:29 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:15:29 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:15:29 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:15:29 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:15:29 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:15:29 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:15:29 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:16:00 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\test_path_detection_fix.py', reloading
2025-07-09 21:16:01 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:16:02 - system - INFO - ==================================================
2025-07-09 21:16:02 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:16:02 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:16:02 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:16:02 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:16:02 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:16:02 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:16:02 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:16:02 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:16:02 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:16:02 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:16:02 - system - INFO - ==================================================
2025-07-09 21:16:08 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:16:08 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:16:09 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:16:09 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:16:09 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:16:09 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:16:09 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:16:09 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:16:09 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:16:09 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:16:10 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:16:10 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:16:10 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:16:10 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:16:10 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:16:10 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:16:10 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:16:10 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:16:14 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:16:15 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:16:15 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:16:15 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:16:15 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:16:15 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:16:15 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:16:15 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:16:15 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:16:15 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:16:15 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:16:15 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:16:15 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:17:47 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\simple_path_test.py', reloading
2025-07-09 21:17:51 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:17:53 - system - INFO - ==================================================
2025-07-09 21:17:53 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:17:53 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:17:53 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:17:53 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:17:53 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:17:53 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:17:53 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:17:53 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:17:53 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:17:53 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:17:53 - system - INFO - ==================================================
2025-07-09 21:18:16 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:18:17 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:18:17 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:18:17 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:18:17 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:18:17 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:18:17 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:18:17 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:18:17 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:18:17 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:18:18 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:18:18 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:18:18 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:18:18 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:18:18 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:18:18 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:18:18 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:18:18 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:18:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:18:24 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:18:24 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:18:24 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:18:24 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:18:24 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:18:24 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:18:24 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:18:24 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:18:24 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:18:24 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:18:24 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:18:24 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:18:54 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\simple_path_test.py', reloading
2025-07-09 21:18:55 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:18:56 - system - INFO - ==================================================
2025-07-09 21:18:56 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:18:56 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:18:56 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:18:56 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:18:56 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:18:56 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:18:56 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:18:56 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:18:56 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:18:56 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:18:56 - system - INFO - ==================================================
2025-07-09 21:19:04 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:19:04 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:19:04 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:19:04 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:19:04 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:19:04 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:19:04 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:19:04 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:19:04 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:19:04 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:19:05 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:19:05 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:19:05 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:19:05 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:19:05 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:19:05 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:19:05 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:19:05 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:19:10 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:19:11 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:19:11 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:19:11 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:19:11 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:19:11 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:19:11 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:19:11 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:19:11 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:19:11 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:19:11 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:19:11 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:19:11 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:32:12 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:32:13 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:32:14 - system - INFO - ==================================================
2025-07-09 21:32:14 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:32:14 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:32:14 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:32:14 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:32:14 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:32:14 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:32:14 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:32:14 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:32:14 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:32:14 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:32:14 - system - INFO - ==================================================
2025-07-09 21:32:20 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:32:21 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:32:21 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:32:21 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:32:21 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:32:21 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:32:21 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:32:21 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:32:21 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:32:21 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:32:22 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:32:22 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:32:22 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:32:22 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:32:22 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:32:22 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:32:22 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:32:22 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:32:26 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:32:27 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:32:27 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:32:27 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:32:27 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:32:27 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:32:27 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:32:27 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:32:27 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:32:27 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:32:27 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:32:27 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:32:27 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:32:39 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:32:39 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:32:40 - system - INFO - ==================================================
2025-07-09 21:32:40 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:32:40 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:32:40 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:32:40 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:32:40 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:32:40 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:32:40 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:32:40 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:32:40 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:32:40 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:32:40 - system - INFO - ==================================================
2025-07-09 21:32:46 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:32:46 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:32:46 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:32:46 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:32:46 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:32:46 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:32:46 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:32:46 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:32:46 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:32:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:32:47 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:32:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:32:47 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:32:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:32:47 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:32:47 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:32:47 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:32:47 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:32:52 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:32:53 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:32:53 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:32:53 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:32:53 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:32:53 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:32:53 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:32:53 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:32:53 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:32:53 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:32:53 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:32:53 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:32:53 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:33:03 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\langgraph\\nodes\\intelligent_coding_node.py', reloading
2025-07-09 21:33:04 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:33:04 - system - INFO - ==================================================
2025-07-09 21:33:04 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:33:04 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:33:04 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:33:04 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:33:04 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:33:04 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:33:04 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:33:04 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:33:04 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:33:04 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:33:04 - system - INFO - ==================================================
2025-07-09 21:33:11 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:44:13 - system - INFO - ==================================================
2025-07-09 21:44:13 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:44:13 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:44:13 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:44:13 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:44:13 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:44:13 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:44:13 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:44:13 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:44:13 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:44:13 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:44:13 - system - INFO - ==================================================
2025-07-09 21:44:21 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:44:21 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:44:21 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:44:21 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:44:21 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:44:21 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:44:22 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:44:22 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:44:22 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:44:22 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:44:23 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:44:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:44:23 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:44:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:44:23 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:44:23 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:44:23 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:44:23 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:44:30 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:44:31 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:44:31 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:44:31 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:44:31 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:44:31 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:44:31 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:44:31 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:44:31 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:44:31 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:44:31 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:44:31 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8082
 * Running on http://26.26.26.1:8082
2025-07-09 21:44:31 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-09 21:44:31 - werkzeug - INFO -  * Restarting with stat
2025-07-09 21:44:32 - system - INFO - ==================================================
2025-07-09 21:44:32 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 21:44:32 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 21:44:32 - system - INFO - 📊 日志级别: INFO
2025-07-09 21:44:32 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 21:44:32 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 21:44:32 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 21:44:32 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 21:44:32 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 21:44:32 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 21:44:32 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 21:44:32 - system - INFO - ==================================================
2025-07-09 21:44:38 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:44:38 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 21:44:38 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 21:44:38 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 21:44:38 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 21:44:38 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 21:44:39 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:44:39 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 21:44:39 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 21:44:39 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:44:39 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:44:40 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:44:40 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 21:44:40 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 21:44:40 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 21:44:40 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 21:44:40 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 21:44:40 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 21:44:46 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 21:44:47 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 21:44:47 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 21:44:47 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 21:44:47 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 21:44:47 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 21:44:47 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 21:44:47 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 21:44:47 - api_server - INFO - 增强分析器初始化成功
2025-07-09 21:44:47 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 21:44:47 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 21:44:47 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 21:44:47 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 21:52:56 - src.apis.coder_agent_api - INFO - 开始处理文档: 链数中建一局_1752069176
2025-07-09 21:52:56 - src.apis.coder_agent_api - INFO - 文档长度: 4931 字符
2025-07-09 21:52:56 - src.apis.coder_agent_api - INFO - 使用LangGraph: True
2025-07-09 21:52:56 - src.apis.coder_agent_api - INFO - 代码输出路径: D:\gitlab\create_project
2025-07-09 21:52:56 - src.apis.coder_agent_api - INFO - 使用LangGraph工作流处理项目: 链数中建一局_1752069176
2025-07-09 21:52:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 准备使用异步SQLite检查点: D:\ai_project\document_analyzer\workflow_checkpoints.db
2025-07-09 21:52:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 生成目标分支名称: 链数中建一局_1752069176 -> D_20250709_链数中建一局_1752069176
2025-07-09 21:52:56 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 开始执行编码工作流: 链数中建一局_1752069176 -> D:\gitlab\create_project
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🚀 Git管理节点开始执行...
2025-07-09 21:52:56 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🎯 git_management_node 开始执行任务...
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ℹ️ 没有可执行的Git管理任务
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ✅ Git管理节点完成 - 提取: 0 个仓库, 克隆: 0 个仓库, 仓库初始化状态: False
2025-07-09 21:52:56 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，Git设置阶段结束
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 智能编码节点开始执行...
2025-07-09 21:52:56 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功加载配置文件
2025-07-09 21:52:56 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 使用火山引擎LLM客户端（从配置文件）
2025-07-09 21:52:56 - src.corder_integration.code_generator.java_templates - INFO - ✅ Java模板管理器初始化完成
2025-07-09 21:52:56 - src.corder_integration.code_generator.template_ai_generator - INFO - ✅ 模板+AI生成器初始化完成 (LLM: unknown)
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI代码生成器初始化完成
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 intelligent_coding_node 开始执行任务...
2025-07-09 21:52:56 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第1轮任务检查...
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第1轮找到 1 个可执行任务
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_008 (api)
2025-07-09 21:52:57 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 已被 intelligent_coding_node 领取
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_008
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: CompanyUnitList
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /general/multiorgManage/queryCompanyUnitList
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 3个
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 6个
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据查询条件查询组织单元信息，支持按编码、状态等条件筛选
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service 中查找最佳Java项目路径...
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 用户服务
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 中等深度结构 (深度7) -> +100
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: basic-service -> +80
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: user-basic-service -> +80
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: basic-general -> +80
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: user-basic-general -> +80
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: service -> +80
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: user -> +50
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: basic -> +50
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: general -> +50
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: application -> +30
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 29个
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 2
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 709
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. user-basic-service\user-basic-general (优先级: 709)
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 709
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /general/multiorgManage/queryCompanyUnitList 提取关键字: multiorgManage
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: multiorgManage
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ❌ 未找到包含关键字 'multiorgManage' 的相关目录
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 🔍 在 D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general 中查找最佳Java项目路径...
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 用户服务
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    📐 中等深度结构 (深度7) -> +100
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    📦 服务模块匹配: user-basic-service -> +120
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    🏢 业务域匹配: user -> +60
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    🏗️ 架构层级匹配: service -> +100
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    🎯🎯🎯 深层服务模块路径匹配 -> +800
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -       🎯 相对路径: .
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -       📊 Java文件: 29个
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -       📐 目录深度: 0
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 1181
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    1. . (优先级: 1181)
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    📋 相对路径: .
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 1181
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 21:52:57 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 29 个Java文件
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 21:52:57 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: CompanyUnitList
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleCompanyUnitList
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: HandleCompanyUnitListServiceImpl
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: HandleCompanyUnitListController
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: HandleCompanyUnitListReq
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: HandleCompanyUnitListResp
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: HandleCompanyUnitListEntity
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:52:57 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 21:53:24 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: HandleCompanyUnitListController.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: HandleCompanyUnitListService.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: HandleCompanyUnitListServiceImpl.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: HandleCompanyUnitListReq.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: HandleCompanyUnitListResp.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: HandleCompanyUnitListEntity.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: HandleCompanyUnitListMapper.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\impl\HandleCompanyUnitListServiceImpl.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\impl\HandleCompanyUnitListServiceImpl.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\HandleCompanyUnitListController.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\HandleCompanyUnitListController.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\HandleCompanyUnitListService.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\HandleCompanyUnitListService.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\HandleCompanyUnitListReq.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\HandleCompanyUnitListReq.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\HandleCompanyUnitListResp.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\HandleCompanyUnitListResp.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\entity\HandleCompanyUnitListEntity.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\entity\HandleCompanyUnitListEntity.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\mapper\HandleCompanyUnitListMapper.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\mapper\HandleCompanyUnitListMapper.java
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 21:53:24 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 状态更新为 completed
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_008 执行成功
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第1轮执行完成，处理了 1 个任务
2025-07-09 21:53:24 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第2轮任务检查...
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第2轮找到 1 个可执行任务
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_009 (api)
2025-07-09 21:53:25 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 已被 intelligent_coding_node 领取
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_009
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyId
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyId
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 6个
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 4个
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据公司ID和筛选条件查询组织单元额度信息，调用用户服务获取组织单元基础信息
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: crcl-open
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: .
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 2255个
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 0
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 2285
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. . (优先级: 2285)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: .
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 2285
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /crcl-open-api/lsLimit/listUnitLimitByCompanyId 提取关键字: lsLimit
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: lsLimit
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ✅ 选择最佳匹配目录: limit (路径: src\main\java\com\yljr\crcl\limit)
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 基于API关键字 'lsLimit' 找到现有路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:25 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:25 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:25 - src.apis.project_analysis_api - INFO - 🔍 在 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit 中查找最佳Java项目路径...
2025-07-09 21:53:25 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 21:53:25 - src.apis.project_analysis_api - WARNING - ⚠️ 在 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit 中未找到包含Java文件的src/main/java结构
2025-07-09 21:53:25 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:25 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:28 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 533 个Java文件
2025-07-09 21:53:28 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 21:53:28 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 21:53:28 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 21:53:28 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: UnitLimitByCompanyId
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleUnitLimitByCompanyId
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: HandleUnitLimitByCompanyIdServiceImpl
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: HandleUnitLimitByCompanyIdController
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: HandleUnitLimitByCompanyIdReq
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: HandleUnitLimitByCompanyIdResp
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: HandleUnitLimitByCompanyIdEntity
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:53:28 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 21:53:51 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: HandleUnitLimitByCompanyIdController.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: HandleUnitLimitByCompanyIdService.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: HandleUnitLimitByCompanyIdServiceImpl.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: HandleUnitLimitByCompanyIdReq.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: HandleUnitLimitByCompanyIdResp.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: HandleUnitLimitByCompanyIdEntity.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: HandleUnitLimitByCompanyIdMapper.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\HandleUnitLimitByCompanyIdServiceImpl.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\HandleUnitLimitByCompanyIdServiceImpl.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\HandleUnitLimitByCompanyIdController.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\HandleUnitLimitByCompanyIdController.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\HandleUnitLimitByCompanyIdService.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\HandleUnitLimitByCompanyIdService.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdReq.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdReq.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdResp.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdResp.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\HandleUnitLimitByCompanyIdEntity.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\HandleUnitLimitByCompanyIdEntity.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\HandleUnitLimitByCompanyIdMapper.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\HandleUnitLimitByCompanyIdMapper.java
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 21:53:51 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 状态更新为 completed
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_009 执行成功
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第2轮执行完成，处理了 1 个任务
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第3轮任务检查...
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第3轮找到 1 个可执行任务
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_010 (api)
2025-07-09 21:53:51 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 已被 intelligent_coding_node 领取
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_010
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyIdExport
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 4个
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 3个
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 复用listUnitLimitByCompanyId接口的查询逻辑，将结果导出为Excel格式
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: crcl-open
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: .
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 2262个
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 0
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 2292
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 深层目录结构 (深度12) -> +150
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: limit
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 7个
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 7
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 187
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. . (优先级: 2292)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    2. src\main\java\com\yljr\crcl\limit (优先级: 187)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: .
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 2292
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport 提取关键字: lsLimit
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: lsLimit
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ✅ 选择最佳匹配目录: limit (路径: src\main\java\com\yljr\crcl\limit)
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 基于API关键字 'lsLimit' 找到现有路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:51 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 21:53:51 - src.apis.project_analysis_api - INFO - 📋 使用缓存的分析结果
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: UnitLimitByCompanyIdExport
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: HandleUnitLimitByCompanyIdExport
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: HandleUnitLimitByCompanyIdExportServiceImpl
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: HandleUnitLimitByCompanyIdExportController
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: HandleUnitLimitByCompanyIdExportReq
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: HandleUnitLimitByCompanyIdExportResp
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: HandleUnitLimitByCompanyIdExportEntity
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 21:53:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 21:54:12 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: HandleUnitLimitByCompanyIdExportController.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: HandleUnitLimitByCompanyIdExportService.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: HandleUnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: HandleUnitLimitByCompanyIdExportReq.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: HandleUnitLimitByCompanyIdExportResp.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: HandleUnitLimitByCompanyIdExportEntity.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: HandleUnitLimitByCompanyIdExportMapper.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\HandleUnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\HandleUnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\HandleUnitLimitByCompanyIdExportController.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\HandleUnitLimitByCompanyIdExportController.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\HandleUnitLimitByCompanyIdExportService.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\HandleUnitLimitByCompanyIdExportService.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdExportReq.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdExportReq.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdExportResp.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\HandleUnitLimitByCompanyIdExportResp.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\HandleUnitLimitByCompanyIdExportEntity.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\HandleUnitLimitByCompanyIdExportEntity.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\HandleUnitLimitByCompanyIdExportMapper.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\HandleUnitLimitByCompanyIdExportMapper.java
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 21:54:12 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 状态更新为 completed
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_010 执行成功
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第3轮执行完成，处理了 1 个任务
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第4轮任务检查...
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 第4轮没有可执行的智能编码任务
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码任务执行完成，共处理 3 个任务，共4轮
2025-07-09 21:54:12 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码节点完成，处理了 3 个任务
2025-07-09 21:54:12 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，结束编码流程
2025-07-09 21:54:12 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 工作流执行成功: 链数中建一局_1752069176, 完成服务数: 0
2025-07-09 21:54:12 - api_server - INFO - ✅ POST coder_agent_api.process_design_document [200] (75.62s)
2025-07-09 21:54:12 - werkzeug - INFO - 127.0.0.1 - - [09/Jul/2025 21:54:12] "POST /api/coder-agent/process-document HTTP/1.1" 200 -
2025-07-09 22:36:56 - system - INFO - ==================================================
2025-07-09 22:36:56 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:36:56 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:36:56 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:36:56 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:36:56 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:36:56 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:36:56 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:36:56 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:36:56 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:36:56 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:36:56 - system - INFO - ==================================================
2025-07-09 22:37:04 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:37:04 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:37:04 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:37:04 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:37:04 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:37:04 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:37:04 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:37:04 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:37:04 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:37:05 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:37:05 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:37:05 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:37:05 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:37:05 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:37:05 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:37:05 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:37:06 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:37:06 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:37:12 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:37:12 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:37:13 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:37:13 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:37:13 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:37:13 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:37:13 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:37:13 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:37:13 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:37:13 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:37:13 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:37:13 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8082
 * Running on http://26.26.26.1:8082
2025-07-09 22:37:13 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-07-09 22:37:13 - werkzeug - INFO -  * Restarting with stat
2025-07-09 22:37:13 - system - INFO - ==================================================
2025-07-09 22:37:13 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:37:13 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:37:13 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:37:13 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:37:13 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:37:13 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:37:13 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:37:13 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:37:13 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:37:13 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:37:13 - system - INFO - ==================================================
2025-07-09 22:37:19 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:37:19 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:37:19 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:37:19 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:37:19 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:37:19 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:37:19 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:37:19 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:37:19 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:37:20 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:37:20 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:37:20 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:37:20 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:37:20 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:37:20 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:37:20 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:37:20 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:37:20 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:37:27 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:37:28 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:37:28 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:37:28 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:37:28 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:37:28 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:37:28 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:37:28 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:37:28 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:37:28 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:37:28 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:37:28 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 22:37:28 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 22:38:30 - src.apis.coder_agent_api - INFO - 开始处理文档: 链数中建一局_1752071910
2025-07-09 22:38:30 - src.apis.coder_agent_api - INFO - 文档长度: 4931 字符
2025-07-09 22:38:30 - src.apis.coder_agent_api - INFO - 使用LangGraph: True
2025-07-09 22:38:30 - src.apis.coder_agent_api - INFO - 代码输出路径: D:\gitlab\create_project
2025-07-09 22:38:30 - src.apis.coder_agent_api - INFO - 使用LangGraph工作流处理项目: 链数中建一局_1752071910
2025-07-09 22:38:30 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 准备使用异步SQLite检查点: D:\ai_project\document_analyzer\workflow_checkpoints.db
2025-07-09 22:38:30 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 生成目标分支名称: 链数中建一局_1752071910 -> D_20250709_链数中建一局_1752071910
2025-07-09 22:38:30 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 开始执行编码工作流: 链数中建一局_1752071910 -> D:\gitlab\create_project
2025-07-09 22:38:30 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🚀 Git管理节点开始执行...
2025-07-09 22:38:30 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 22:38:30 - src.corder_integration.langgraph.nodes.git_management_node - INFO - 🎯 git_management_node 开始执行任务...
2025-07-09 22:38:30 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ℹ️ 没有可执行的Git管理任务
2025-07-09 22:38:30 - src.corder_integration.langgraph.nodes.git_management_node - INFO - ✅ Git管理节点完成 - 提取: 0 个仓库, 克隆: 0 个仓库, 仓库初始化状态: False
2025-07-09 22:38:30 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，Git设置阶段结束
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 智能编码节点开始执行...
2025-07-09 22:38:31 - src.corder_integration.langgraph.task_manager - INFO - 📂 使用数据库: D:\ai_project\document_analyzer\coding_agent_workflow.db
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 成功加载配置文件
2025-07-09 22:38:31 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 使用火山引擎LLM客户端（从配置文件）
2025-07-09 22:38:31 - src.corder_integration.code_generator.java_templates - INFO - ✅ Java模板管理器初始化完成
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - INFO - ✅ 模板+AI生成器初始化完成 (LLM: unknown)
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI代码生成器初始化完成
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 intelligent_coding_node 开始执行任务...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第1轮任务检查...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第1轮找到 1 个可执行任务
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_008 (api)
2025-07-09 22:38:31 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 已被 intelligent_coding_node 领取
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_008
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: CompanyUnitList
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /general/multiorgManage/queryCompanyUnitList
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 3个
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 6个
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据查询条件查询组织单元信息，支持按编码、状态等条件筛选
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/zqyl-user-center-service 中查找最佳Java项目路径...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 用户服务
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 中等深度结构 (深度7) -> +100
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: basic-service -> +80
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: user-basic-service -> +80
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: basic-general -> +80
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: user-basic-general -> +80
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📦 服务模块匹配: service -> +80
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: user -> +50
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: basic -> +50
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏢 业务域匹配: general -> +50
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: application -> +30
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 29个
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 2
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 709
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. user-basic-service\user-basic-general (优先级: 709)
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 709
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /general/multiorgManage/queryCompanyUnitList 提取关键字: multiorgManage
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: multiorgManage
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ❌ 未找到包含关键字 'multiorgManage' 的相关目录
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 🔍 在 D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general 中查找最佳Java项目路径...
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 用户服务
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    📐 中等深度结构 (深度7) -> +100
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    📦 服务模块匹配: user-basic-service -> +120
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    🏢 业务域匹配: user -> +60
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    🏗️ 架构层级匹配: service -> +100
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    🎯🎯🎯 深层服务模块路径匹配 -> +800
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    📁 发现Java项目: user-basic-general
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -       🎯 相对路径: .
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -       📊 Java文件: 29个
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -       📐 目录深度: 0
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -       🏆 优先级分数: 1181
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    1. . (优先级: 1181)
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    📋 相对路径: .
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO -    🏆 最终优先级: 1181
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general
2025-07-09 22:38:31 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 29 个Java文件
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.user.basicgeneral (出现29次)
2025-07-09 22:38:31 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: CompanyUnitList
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: CompanyUnitList
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: CompanyUnitListServiceImpl
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: CompanyUnitListController
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: CompanyUnitListReq
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: CompanyUnitListResp
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: CompanyUnitListEntity
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:38:31 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 22:38:48 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: CompanyUnitListController.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: CompanyUnitListService.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: CompanyUnitListServiceImpl.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: CompanyUnitListReq.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: CompanyUnitListResp.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: CompanyUnitListEntity.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: CompanyUnitListMapper.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListServiceImpl.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\impl\CompanyUnitListServiceImpl.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListController.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\rest\CompanyUnitListController.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListService.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\application\service\CompanyUnitListService.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListReq.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListReq.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListResp.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\interfaces\dto\CompanyUnitListResp.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnitListEntity.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\entity\CompanyUnitListEntity.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListMapper.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\zqyl-user-center-service\user-basic-service\user-basic-general\src\main\java\com\yljr\user\basicgeneral\domain\mapper\CompanyUnitListMapper.java
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 22:38:48 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_008 状态更新为 completed
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_008 执行成功
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第1轮执行完成，处理了 1 个任务
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第2轮任务检查...
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第2轮找到 1 个可执行任务
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_009 (api)
2025-07-09 22:38:48 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 已被 intelligent_coding_node 领取
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_009
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyId
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyId
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 6个
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 4个
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 根据公司ID和筛选条件查询组织单元额度信息，调用用户服务获取组织单元基础信息
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: crcl-open
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: .
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 2251个
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 0
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 2281
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. . (优先级: 2281)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: .
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 2281
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /crcl-open-api/lsLimit/listUnitLimitByCompanyId 提取关键字: lsLimit
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: lsLimit
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ✅ 选择最佳匹配目录: limit (路径: src\main\java\com\yljr\crcl\limit)
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 基于API关键字 'lsLimit' 找到现有路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:38:48 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:38:48 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:38:48 - src.apis.project_analysis_api - INFO - 🔍 在 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit 中查找最佳Java项目路径...
2025-07-09 22:38:48 - src.apis.project_analysis_api - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 22:38:48 - src.apis.project_analysis_api - WARNING - ⚠️ 在 D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit 中未找到包含Java文件的src/main/java结构
2025-07-09 22:38:48 - src.apis.project_analysis_api - INFO - 📂 实际分析路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:38:48 - src.utils.java_code_analyzer - INFO - 🔍 开始分析企业级Java项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:38:51 - src.utils.java_code_analyzer - INFO - ✅ 企业级项目分析完成，共分析 533 个Java文件
2025-07-09 22:38:51 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 22:38:51 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 22:38:51 - src.apis.project_analysis_api - INFO - 📦 动态检测到基础包: com.yljr.crcl.limit (出现533次)
2025-07-09 22:38:51 - src.apis.project_analysis_api - INFO - ✅ 项目分析完成，已提取代码生成上下文
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: UnitLimitByCompanyId
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyId
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: UnitLimitByCompanyIdServiceImpl
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdController
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdReq
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdResp
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: UnitLimitByCompanyIdEntity
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:38:51 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 22:39:09 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdController.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: UnitLimitByCompanyIdService.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: UnitLimitByCompanyIdServiceImpl.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdReq.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdResp.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: UnitLimitByCompanyIdEntity.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdMapper.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\UnitLimitByCompanyIdServiceImpl.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\UnitLimitByCompanyIdController.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\UnitLimitByCompanyIdService.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\UnitLimitByCompanyIdService.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdReq.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdResp.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\UnitLimitByCompanyIdEntity.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\UnitLimitByCompanyIdEntity.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\UnitLimitByCompanyIdMapper.java
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 22:39:09 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_009 状态更新为 completed
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_009 执行成功
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第2轮执行完成，处理了 1 个任务
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第3轮任务检查...
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 第3轮找到 1 个可执行任务
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🚀 开始执行任务: task_010 (api)
2025-07-09 22:39:09 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 已被 intelligent_coding_node 领取
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🌐 执行API接口生成任务: task_010
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 解析的接口信息:
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 接口名称: UnitLimitByCompanyIdExport
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - API路径: /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - HTTP方法: GET
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输入参数: 4个
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 输出参数: 3个
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    - 业务描述: 复用listUnitLimitByCompanyId接口的查询逻辑，将结果导出为Excel格式
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在 D:/gitlab/create_project/链数中建一局_1752029983/crcl-open 中查找最佳Java项目路径...
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 目标服务名: 确权开立服务
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: crcl-open
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: .
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 2258个
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 0
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 2288
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📐 深层目录结构 (深度12) -> +150
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏗️ 架构层级匹配: interfaces -> +30
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 发现Java项目: limit
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🎯 相对路径: src\main\java\com\yljr\crcl\limit
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📊 Java文件: 7个
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       📐 目录深度: 7
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -       🏆 优先级分数: 187
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 排序后的候选路径（前3个）:
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    1. . (优先级: 2288)
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    2. src\main\java\com\yljr\crcl\limit (优先级: 187)
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 选择最佳Java项目路径:
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 完整路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📋 相对路径: .
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    🏆 最终优先级: 2288
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 从API路径 /crcl-open-api/lsLimit/listUnitLimitByCompanyIdExport 提取关键字: lsLimit
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 在项目中搜索关键字相关路径: lsLimit
2025-07-09 22:39:09 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: ls (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    📁 找到匹配目录: limit (得分: 25)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -    ✅ 选择最佳匹配目录: limit (路径: src\main\java\com\yljr\crcl\limit)
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎯 基于API关键字 'lsLimit' 找到现有路径: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  分析目标项目: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:39:10 - src.apis.project_analysis_api - INFO - 🔍 开始分析项目用于代码生成: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit
2025-07-09 22:39:10 - src.apis.project_analysis_api - INFO - 📋 使用缓存的分析结果
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO -  调用volcengine大模型生成代码...
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔍 开始代码生成...
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🎨 使用模板+AI混合模式生成代码
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - INFO - 🎨 开始模板+AI混合代码生成: UnitLimitByCompanyIdExport
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - INFO - 🤖 使用unknown增强模板代码...
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_impl AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ controller AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ service_interface AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ request_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ response_dto AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ entity AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.code_generator.template_ai_generator - ERROR - ❌ mapper AI增强异常: 'VolcengineClient' object has no attribute 'chat_completion'
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 模板+AI生成成功，生成代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 开始写入生成的代码文件...
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔧 统一类名基础: UnitLimitByCompanyIdExport
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ service_impl 类名: UnitLimitByCompanyIdExportServiceImpl
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ controller 类名: UnitLimitByCompanyIdExportController
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ request_dto 类名: UnitLimitByCompanyIdExportReq
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ response_dto 类名: UnitLimitByCompanyIdExportResp
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ entity 类名: UnitLimitByCompanyIdExportEntity
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 检测到service_impl但缺少service，这是正常的（接口会被自动生成）
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📋 标准化后的代码类型: ['service_impl', 'controller', 'service_interface', 'request_dto', 'response_dto', 'entity', 'mapper']
2025-07-09 22:39:10 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🤖 调用volcengine判断Java文件输出路径...
2025-07-09 22:39:27 - httpx - INFO - HTTP Request: POST https://ark.cn-beijing.volces.com/api/v3/chat/completions "HTTP/1.1 200 OK"
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ LLM路径判断成功，配置了 7 个Java文件路径
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 controller: UnitLimitByCompanyIdExportController.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_interface: UnitLimitByCompanyIdExportService.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 service_impl: UnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 request_dto: UnitLimitByCompanyIdExportReq.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 response_dto: UnitLimitByCompanyIdExportResp.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 entity: UnitLimitByCompanyIdExportEntity.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📍 mapper: UnitLimitByCompanyIdExportMapper.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\UnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\impl\UnitLimitByCompanyIdExportServiceImpl.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\UnitLimitByCompanyIdExportController.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\rest\UnitLimitByCompanyIdExportController.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\UnitLimitByCompanyIdExportService.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\application\service\UnitLimitByCompanyIdExportService.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdExportReq.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdExportReq.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdExportResp.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\interfaces\dto\UnitLimitByCompanyIdExportResp.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\UnitLimitByCompanyIdExportEntity.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\entity\UnitLimitByCompanyIdExportEntity.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📝 已生成代码文件: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\UnitLimitByCompanyIdExportMapper.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 文件写入验证成功: D:\gitlab\create_project\链数中建一局_1752029983\crcl-open\src\main\java\com\yljr\crcl\limit\src\main\java\com\yljr\crcl\limit\domain\mapper\UnitLimitByCompanyIdExportMapper.java
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 📊 代码生成完成，共写入 7 个文件到项目中
2025-07-09 22:39:27 - src.corder_integration.langgraph.task_manager - INFO - ✅ 任务 task_010 状态更新为 completed
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 任务 task_010 执行成功
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 第3轮执行完成，处理了 1 个任务
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - 🔄 第4轮任务检查...
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ℹ️ 第4轮没有可执行的智能编码任务
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码任务执行完成，共处理 3 个任务，共4轮
2025-07-09 22:39:27 - src.corder_integration.langgraph.nodes.intelligent_coding_node - INFO - ✅ 智能编码节点完成，处理了 3 个任务
2025-07-09 22:39:27 - src.corder_integration.langgraph.workflow_orchestrator - WARNING - 没有识别到任何服务，结束编码流程
2025-07-09 22:39:27 - src.corder_integration.langgraph.workflow_orchestrator - INFO - 工作流执行成功: 链数中建一局_1752071910, 完成服务数: 0
2025-07-09 22:39:27 - api_server - INFO - ✅ POST coder_agent_api.process_design_document [200] (56.85s)
2025-07-09 22:39:27 - werkzeug - INFO - 127.0.0.1 - - [09/Jul/2025 22:39:27] "POST /api/coder-agent/process-document HTTP/1.1" 200 -
2025-07-09 22:49:19 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\code_generator\\java_templates.py', reloading
2025-07-09 22:49:20 - werkzeug - INFO -  * Restarting with stat
2025-07-09 22:49:20 - system - INFO - ==================================================
2025-07-09 22:49:20 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:49:20 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:49:20 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:49:20 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:49:20 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:49:20 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:49:20 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:49:20 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:49:20 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:49:20 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:49:20 - system - INFO - ==================================================
2025-07-09 22:49:28 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:49:29 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:49:29 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:49:29 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:49:29 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:49:29 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:49:29 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:49:29 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:49:29 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:49:29 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:49:30 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:49:30 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:49:30 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:49:30 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:49:30 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:49:30 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:49:30 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:49:30 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:49:36 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:49:37 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:49:37 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:49:37 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:49:37 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:49:37 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:49:37 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:49:37 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:49:37 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:49:37 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:49:37 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:49:37 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 22:49:37 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 22:50:13 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\test_template_variable_fix.py', reloading
2025-07-09 22:50:13 - werkzeug - INFO -  * Restarting with stat
2025-07-09 22:50:14 - system - INFO - ==================================================
2025-07-09 22:50:14 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:50:14 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:50:14 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:50:14 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:50:14 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:50:14 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:50:14 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:50:14 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:50:14 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:50:14 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:50:14 - system - INFO - ==================================================
2025-07-09 22:50:21 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:50:21 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:50:21 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:50:21 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:50:21 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:50:21 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:50:22 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:50:22 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:50:22 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:50:22 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:50:22 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:50:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:50:23 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:50:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:50:23 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:50:23 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:50:23 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:50:23 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:50:28 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:50:29 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:50:29 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:50:29 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:50:29 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:50:29 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:50:29 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:50:29 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:50:29 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:50:29 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:50:29 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:50:29 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 22:50:29 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 22:51:35 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\src\\corder_integration\\code_generator\\template_ai_generator.py', reloading
2025-07-09 22:51:36 - werkzeug - INFO -  * Restarting with stat
2025-07-09 22:51:37 - system - INFO - ==================================================
2025-07-09 22:51:37 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:51:37 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:51:37 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:51:37 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:51:37 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:51:37 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:51:37 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:51:37 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:51:37 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:51:37 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:51:37 - system - INFO - ==================================================
2025-07-09 22:51:43 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:51:43 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:51:43 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:51:43 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:51:43 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:51:43 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:51:44 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:51:44 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:51:44 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:51:44 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:51:44 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:51:45 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:51:45 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:51:45 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:51:45 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:51:45 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:51:45 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:51:45 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:51:50 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:51:51 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:51:51 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:51:51 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:51:51 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:51:51 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:51:51 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:51:51 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:51:51 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:51:51 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:51:51 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:51:51 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 22:51:51 - werkzeug - INFO -  * Debugger PIN: 887-537-592
2025-07-09 22:52:14 - werkzeug - INFO -  * Detected change in 'D:\\ai_project\\document_analyzer\\test_ai_prompt_fix.py', reloading
2025-07-09 22:52:15 - werkzeug - INFO -  * Restarting with stat
2025-07-09 22:52:16 - system - INFO - ==================================================
2025-07-09 22:52:16 - system - INFO - 🚀 智能分析系统日志系统初始化完成
2025-07-09 22:52:16 - system - INFO - 📁 日志根目录: D:\ai_project\document_analyzer\logs
2025-07-09 22:52:16 - system - INFO - 📊 日志级别: INFO
2025-07-09 22:52:16 - system - INFO - 📅 按日期轮转: 每天午夜自动轮转
2025-07-09 22:52:16 - system - INFO - 📂 按月分目录: logs/YYYY-MM/
2025-07-09 22:52:16 - system - INFO - 📝 主日志: logs/2025-07/app.log
2025-07-09 22:52:16 - system - INFO - 🔧 API日志: logs/2025-07/api_server.log
2025-07-09 22:52:16 - system - INFO - 🧪 分析日志: logs/2025-07/analysis_service.log
2025-07-09 22:52:16 - system - INFO - ❌ 错误日志: logs/2025-07/error.log
2025-07-09 22:52:16 - system - INFO - 🗂️ 保留天数: 5 天
2025-07-09 22:52:16 - system - INFO - ==================================================
2025-07-09 22:52:22 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:52:23 - root - WARNING - 智能编码节点不可用: cannot import name 'generate_single_service' from partially initialized module 'src.corder_integration.langgraph.nodes.intelligent_coding_node' (most likely due to a circular import) (D:\ai_project\document_analyzer\src\corder_integration\langgraph\nodes\intelligent_coding_node.py)
2025-07-09 22:52:23 - src.utils.task_storage - INFO - 数据库初始化成功
2025-07-09 22:52:23 - markdown_storage - INFO - Markdown存储管理器初始化完成
2025-07-09 22:52:23 - src.utils.analysis_utils - INFO - 分析目录初始化完成
2025-07-09 22:52:23 - api_server - INFO - 从配置文件读取火山引擎配置: {'api_key': '7fcb3541-9363-4bfa-90aa-19e9f691bc25', 'endpoint': 'https://ark.cn-beijing.volces.com/api/v3', 'max_tokens': 4000, 'model': 'ep-20250605091804-wmw6w', 'temperature': 0.7}
2025-07-09 22:52:23 - src.utils.volcengine_client - INFO - 火山引擎客户端初始化成功
2025-07-09 22:52:23 - api_server - INFO - 火山引擎客户端初始化成功
2025-07-09 22:52:23 - api_server - INFO - Weaviate配置: http://localhost:8080
2025-07-09 22:52:23 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:52:24 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:52:24 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:52:24 - WeaviateVectorDatabase - INFO - ✅ Weaviate连接成功: http://localhost:8080 (gRPC: 50051)
2025-07-09 22:52:24 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/schema/AnalyDesignDocuments "HTTP/1.1 200 OK"
2025-07-09 22:52:24 - WeaviateVectorDatabase - INFO - ✅ Weaviate集合已存在: AnalyDesignDocuments
2025-07-09 22:52:24 - AnalysisServiceManager - INFO - 初始化向量数据库: weaviate
2025-07-09 22:52:24 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: cpu
2025-07-09 22:52:24 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: BAAI/bge-large-zh
2025-07-09 22:52:30 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/meta "HTTP/1.1 200 OK"
2025-07-09 22:52:30 - httpx - INFO - HTTP Request: GET https://pypi.org/pypi/weaviate-client/json "HTTP/1.1 200 OK"
2025-07-09 22:52:30 - httpx - INFO - HTTP Request: GET http://localhost:8080/v1/.well-known/ready "HTTP/1.1 200 OK"
2025-07-09 22:52:30 - src.utils.weaviate_helper - INFO - 成功连接到 Weaviate: localhost:8080
2025-07-09 22:52:30 - AnalysisServiceManager - INFO - 分析服务管理器初始化完成
2025-07-09 22:52:30 - api_server - INFO - 分析服务管理器初始化成功
2025-07-09 22:52:30 - api_server - INFO - 分析服务管理器已集成到API服务器
2025-07-09 22:52:30 - src.utils.enhanced_analyzer - INFO - 增强分析器初始化完成
2025-07-09 22:52:30 - api_server - INFO - 增强分析器初始化成功
2025-07-09 22:52:30 - api_server - INFO - 初始化任务存储数据库...
2025-07-09 22:52:30 - api_server - INFO - 任务存储数据库初始化成功
2025-07-09 22:52:30 - werkzeug - WARNING -  * Debugger is active!
2025-07-09 22:52:30 - werkzeug - INFO -  * Debugger PIN: 887-537-592
